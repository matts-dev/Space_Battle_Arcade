Gamma Correction Notes


-how monitor gamma changes color   
    monitors transform color by a exponent equation
        monitorColor = (colorValue)^(2.2)           //color values are on the range [0,1]
    gamma correction does the inverse
        correctedMonitorColor = (colorValue)^(1/2.2)
    net result
        color = (   (colorValue)^(1/2.2)    )^(2.2) = colorvalue

-be sure to only gamma correct on the final output
    multiple stacked gamma corrections will look very weird, gamma correction is only intended to be applied once. 

-textures generally were designed in screen color space, and should have GL_SRGB applied to them when loaded.
-texture maps for lighting (such as normal maps, difusse_maps, specular_maps) were designed for calculations and SHOULD NOT have GL_SRGB applie to them.


-when using gamma correction, real world calculations become more realstic
    attentuation hack - previuosly we did attenutation with a linear hack   
        -this looks to weak with gamma correction
            before gamma correction:
                (1/distance)^2.2 == 1/(distance^2.2); so monitor simulates good attenuation
            linear with gamma correc
                ((1/distance)^2.2)^(1/2.2) = 1/distance
            quadratic with gamma correction 
                ((1/distance^2)^2.2)^(1/2.2) = 1/(distance^2)